{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sarik\\\\RealtorAI\\\\frontend\\\\src\\\\components\\\\Realtor\\\\GeneratedLeads.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../../styles/Realtor/GeneratedLeads.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GeneratedLeads = () => {\n  _s();\n  const [LeadData, setData] = useState({\n    LeadName: \"\",\n    Contact: \"\",\n    Email: \"\"\n  });\n  const getDataFromZap = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/getSellerData\"); // This is now a GET request\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Error ${response.status}: ${errorText}`);\n      }\n      const data = await response.json();\n\n      // Update LeadData with the fetched data\n      setData({\n        LeadName: data.LeadName || \"\",\n        Contact: data.Contact || \"\",\n        Email: data.LeadEmail || \"\"\n      });\n    } catch (error) {\n      console.error(\"Error fetching data: \", error);\n    }\n  };\n  useEffect(() => {\n    getDataFromZap(); // Fetch data immediately on mount\n    const intervalId = setInterval(getDataFromZap, 5000); // Poll every 5 seconds\n    return () => clearInterval(intervalId);\n  }, []);\n  const userName = 'Jaydeep'; // Dynamic user name placeholder\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"generated-leads\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"leads-title\",\n      children: [\"Hey \", userName, \", your potential leads at a glance\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leads-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lead-card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lead-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Seller Lead\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lead-info-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Full Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 18\n              }, this), \" \", LeadData.LeadName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Contact Number:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 18\n              }, this), \" \", LeadData.Contact]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 18\n              }, this), \" \", LeadData.Email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(GeneratedLeads, \"uJb/Z8b//HAazaLvpxl7PKXaZ3c=\");\n_c = GeneratedLeads;\nexport default GeneratedLeads;\nvar _c;\n$RefreshReg$(_c, \"GeneratedLeads\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GeneratedLeads","_s","LeadData","setData","LeadName","Contact","Email","getDataFromZap","response","fetch","ok","errorText","text","Error","status","data","json","LeadEmail","error","console","intervalId","setInterval","clearInterval","userName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sarik/RealtorAI/frontend/src/components/Realtor/GeneratedLeads.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../../styles/Realtor/GeneratedLeads.css';\r\n\r\nconst GeneratedLeads = () => {\r\n  const [LeadData, setData] = useState({\r\n    LeadName: \"\",\r\n    Contact: \"\",\r\n    Email: \"\",\r\n  });\r\n\r\n  const getDataFromZap = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/getSellerData\"); // This is now a GET request\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(`Error ${response.status}: ${errorText}`);\r\n      }\r\n      const data = await response.json();\r\n\r\n      // Update LeadData with the fetched data\r\n      setData({\r\n        LeadName: data.LeadName || \"\",\r\n        Contact: data.Contact || \"\",\r\n        Email: data.LeadEmail || \"\",\r\n      });\r\n\r\n    } catch (error) {\r\n      console.error(\"Error fetching data: \", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDataFromZap(); // Fetch data immediately on mount\r\n    const intervalId = setInterval(getDataFromZap, 5000); // Poll every 5 seconds\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  const userName = 'Jaydeep'; // Dynamic user name placeholder\r\n\r\n  return (\r\n    <section className=\"generated-leads\">\r\n      <h1 className=\"leads-title\">Hey {userName}, your potential leads at a glance</h1>\r\n\r\n      <div className=\"leads-container\">\r\n        {/* Show Lead Data */}\r\n        <div className=\"lead-card\">\r\n          <div className=\"lead-info\">\r\n            <h2>Seller Lead</h2>\r\n            <div className=\"lead-info-section\">\r\n              <p><strong>Full Name:</strong> {LeadData.LeadName}</p>\r\n              <p><strong>Contact Number:</strong> {LeadData.Contact}</p>\r\n              <p><strong>Email:</strong> {LeadData.Email}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default GeneratedLeads;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}