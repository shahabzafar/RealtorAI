{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sarik\\\\RealtorAI\\\\frontend\\\\src\\\\components\\\\Realtor\\\\GeneratedLeads.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../../styles/Realtor/GeneratedLeads.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GeneratedLeads = () => {\n  _s();\n  const [LeadData, setData] = useState({\n    LeadName: \"\",\n    Contact: \"\",\n    Email: \"\"\n  });\n  const getDataFromZap = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/getSellerData\");\n      const data = await response.json();\n      console.\n      // Update LeadData with the fetched data\n      setData({\n        LeadName: data.LeadName,\n        Contact: data.Contact,\n        Email: data.LeadEmail\n      });\n\n      // Assuming you also want to keep seller leads if they are part of the response\n      // Uncomment the below line if seller leads are part of the response\n      // setSellerLeads(data.sellerLeads); \n    } catch (error) {\n      console.error(\"Error fetching data: \", error);\n    }\n  };\n  useEffect(() => {\n    getDataFromZap();\n    const intervalId = setInterval(getDataFromZap, 5000);\n    return () => clearInterval(intervalId);\n  }, []);\n  const userName = 'Jaydeep'; // Dynamic user name placeholder\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"generated-leads\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"leads-title\",\n      children: [\"Hey \", userName, \", your potential leads at a glance\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leads-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lead-card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lead-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Seller Lead\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lead-info-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Full Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 18\n              }, this), \" \", LeadData.LeadName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Contact Number:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 18\n              }, this), \" \", LeadData.Contact]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 18\n              }, this), \" \", LeadData.Email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(GeneratedLeads, \"uJb/Z8b//HAazaLvpxl7PKXaZ3c=\");\n_c = GeneratedLeads;\nexport default GeneratedLeads;\nvar _c;\n$RefreshReg$(_c, \"GeneratedLeads\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GeneratedLeads","_s","LeadData","setData","LeadName","Contact","Email","getDataFromZap","response","fetch","data","json","console","LeadEmail","error","intervalId","setInterval","clearInterval","userName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sarik/RealtorAI/frontend/src/components/Realtor/GeneratedLeads.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../../styles/Realtor/GeneratedLeads.css';\r\n\r\nconst GeneratedLeads = () => {\r\n  const [LeadData, setData] = useState({\r\n    LeadName: \"\",\r\n    Contact: \"\",\r\n    Email: \"\",\r\n  });\r\n\r\n  const getDataFromZap = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/getSellerData\");\r\n      const data = await response.json();\r\n\r\n      console.\r\n\r\n        // Update LeadData with the fetched data\r\n        setData({\r\n          LeadName: data.LeadName,\r\n          Contact: data.Contact,\r\n          Email: data.LeadEmail,\r\n        });\r\n\r\n      // Assuming you also want to keep seller leads if they are part of the response\r\n      // Uncomment the below line if seller leads are part of the response\r\n      // setSellerLeads(data.sellerLeads); \r\n\r\n    } catch (error) {\r\n      console.error(\"Error fetching data: \", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDataFromZap();\r\n    const intervalId = setInterval(getDataFromZap, 5000);\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  const userName = 'Jaydeep'; // Dynamic user name placeholder\r\n\r\n  return (\r\n    <section className=\"generated-leads\">\r\n      <h1 className=\"leads-title\">Hey {userName}, your potential leads at a glance</h1>\r\n\r\n      <div className=\"leads-container\">\r\n        {/* Show Lead Data */}\r\n        <div className=\"lead-card\">\r\n          <div className=\"lead-info\">\r\n            <h2>Seller Lead</h2>\r\n            <div className=\"lead-info-section\">\r\n              <p><strong>Full Name:</strong> {LeadData.LeadName}</p>\r\n              <p><strong>Contact Number:</strong> {LeadData.Contact}</p>\r\n              <p><strong>Email:</strong> {LeadData.Email}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default GeneratedLeads;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}